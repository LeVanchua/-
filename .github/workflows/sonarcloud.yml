name: SonarCloud .NET 8 Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build NetSdrClientApp.sln --no-restore --configuration Release

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"LeVanchua_-" \
            /o:"<levanchua>" \
            /d:sonar.login="${SONAR_TOKEN}" \
            /d:sonar.projectBaseDir="${{ github.workspace }}" \
            /d:sonar.verbose=true \
            /d:sonar.cs.opencover.reportsPaths="**/TestResults/*/coverage.opencover.xml"

      - name: Run tests with coverage
        run: |
          dotnet test NetSdrClientAppTests/NetSdrClientAppTests.csproj \
            --no-build \
            --verbosity normal \
            --collect:"XPlat Code Coverage" \
            --results-directory TestResults || echo "No tests found, skipping"

      - name: Convert coverage to opencover (if exists)
        run: |
          COVERAGE_FILE=$(find TestResults -name 'coverage.cobertura.xml' | head -n 1)
          if [ -f "$COVERAGE_FILE" ]; then
            echo "Coverage file found: $COVERAGE_FILE"
          else
            echo "No coverage file found, skipping"
          fi

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.login="${SONAR_TOKEN}"
